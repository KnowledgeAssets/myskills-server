buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'io.knowledgeassets.myskills'
version = '0.0.1-SNAPSHOT'

/*
 * Use Java 10 language level
 */
sourceCompatibility = 10
targetCompatibility = 10

repositories {
	mavenCentral()
}

dependencies {
	/*
	 * Application compile dependencies
	 */
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-neo4j')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.axonframework:axon-spring-boot-starter:${axonFrameworkVersion}")
	compile('javax.xml.bind:jaxb-api')
	compile("io.springfox:springfox-swagger2:${springfoxSwagger2Version}")
	compile("org.apache.commons:commons-lang3:${commonsLang3Version}")

	/*
	 * Application runtime dependencies
	 */
	runtime("io.springfox:springfox-swagger-ui:${springfoxSwagger2Version}")

	/*
	 * Annotation processors
	 */
	annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
	/*
	 * Lombok up to version 1.18.0 does not work for Gradle 4.9 + JDK 10,
	 * see https://github.com/rzwitserloot/lombok/issues/1716
	 */
//	annotationProcessor('org.projectlombok:lombok')

	/*
	 * Test compile dependencies
	 */
	testCompile('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'junit', module: 'junit'
	}
	testCompile('org.springframework.security:spring-security-test')
	testCompile('org.junit.jupiter:junit-jupiter-api')

	/*
	 * Test runtime dependencies
	 */
	testRuntime('org.junit.jupiter:junit-jupiter-engine')
	testRuntime("org.neo4j:neo4j-ogm-embedded-driver:${neo4jOgmEmbeddedDriverVersion}")
	testRuntime("org.neo4j:neo4j:${neo4jVersion}")
}

test {
	/*
	 * Run tests using JUnit Platform (JUnit 5)
	 */
	useJUnitPlatform()
}
